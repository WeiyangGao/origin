buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://oss.sonatype.org/content/groups/public/" }
        maven { url "https://repo.spring.io/libs-milestone/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.tcps'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "https://oss.sonatype.org/content/groups/public/" }
    maven { url "https://repo.spring.io/libs-milestone/" }
    jcenter()
    mavenCentral()
}

ext['springCloudVersion'] = 'Greenwich.RC1'

dependencies {
//    implementation('org.springframework.boot:spring-boot-starter-amqp')
//    implementation('org.springframework.boot:spring-boot-starter-websocket')
//    implementation('org.springframework.cloud:spring-cloud-starter-gateway')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
//    implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
//    implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
//    implementation('org.springframework.cloud:spring-cloud-starter-security')
//    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
//    runtimeOnly('mysql:mysql-connector-java')
//    runtimeOnly('org.postgresql:postgresql')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.boot:spring-boot-starter-web')
    // Bcry加密
    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    runtimeOnly('com.h2database:h2')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
